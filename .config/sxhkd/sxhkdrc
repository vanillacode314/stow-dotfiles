#
# wm independent hotkeys
#

# terminal emulator
super + Return
	kitty

# program launcher
super + @space
	dmenu_run -m 0

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit bspwm
super + shift + q
	bspc quit

# logout
# super + shift + q
# 	loginctl terminate-user $USER

# restart bspwm
super + shift + r
	bspc wm -r

# close and kill
super + {_,shift + }e
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest window
super + g
	bspc node -s biggest.local.window

#
# state/flags
#

# set the window state
super + {t,shift + t,f}
	bspc node -t {tiled,pseudo_tiled,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous window in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local.!hidden.window

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# swap monitors
super + s
    bspc node @HDMI-A-0:focused:/ -s @eDP:focused:/ || \
    bspc node @HDMI-A-0:focused:/ -s @eDP:focused:/ || \
    bspc node @eDP:focused:/ -s @HDMI-A-0:focused:/;

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# # expand a window by moving one of its side outward
# super + alt + {h,j,k,l}
# 	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}
#
# # contract a window by moving one of its side inward
# super + alt + shift + {h,j,k,l}
# 	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

super + alt + {h,j,k,l}
  {bspc node -z right -20 0; \
  bspc node -z left +20 0, \
  bspc node -z top 0 -20; \
  bspc node -z bottom 0 +20, \
  bspc node -z top 0 +20; \
  bspc node -z bottom 0 -20, \
  bspc node -z right +20 0; \
  bspc node -z left -20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

#
# applications
#

# browser
super + alt + b
	exec $BROWSER

# discord
super + alt + d
	exec com.discordapp.Discord

# wallpapers 
super + alt + w
  exec nsxiv -a -f -t /home/media/Sync/Wallpapers

# file manager
super + alt + f
  exec kitty -e "lf"

super + alt + g
  exec pcmanfm

# btm (task manager)
super + alt + y
  exec kitty -e "btm"

# cmus
super + alt + m
  exec kitty --class "Cmus" -e "ncmpcpp"

#
# keyboard keys
#
XF86AudioRaiseVolume
  exec pamixer -i 5
XF86AudioLowerVolume
  exec pamixer -d 5
XF86AudioMute
  exec pamixer --toggle-mute
XF86MonBrightnessDown
  exec brightnessctl down
XF86MonBrightnessUp
  exec brightnessctl up
XF86AudioPlay
  exec playerctl play-pause
XF86AudioNext
  exec playerctl next
XF86AudioPrev
	exec playerctl previous

#
# dunst keybinds
#

ctrl + grave
	exec dunstctl history-pop

ctrl + space
	exec dunstctl close-all

#
# dmenu scripts
#

# powermenu
F10
  exec powermenu

# quickclip
super + shift + p
	exec quickclip

# quickclip
super + shift + b
	exec choose-bookmark

# toggle monitor
F12
	exec toggle-monitor

F12
  exec fish -c "cd ~/Screenshots; maim screenshot_(date  +%Y-%m-%dT%H:%M:%S%Z).png"

super + F12
  exec fish -c "cd ~/Screenshots; maim --select screenshot_(date  +%Y-%m-%dT%H:%M:%S%Z).png"
