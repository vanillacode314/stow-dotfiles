#################################
#          Animations           #
#################################


# fly-in: Windows fly in from random directions to the screen
# maximize: Windows pop from center of the screen to their respective positions
# minimize: Windows minimize from their position to the center of the screen
# slide-in-center: Windows move from upper-center of the screen to their respective positions
# slide-out-center: Windows move to the upper-center of the screen
# slide-left: Windows are created from the right-most window position and slide leftwards
# slide right: Windows are created from the left-most window position and slide rightwards
# slide-down: Windows are moved from the top of the screen and slide downward
# slide-up: Windows are moved from their position to top of the screen
# squeeze: Windows are either closed or created to/from their center y-position (the animation is similar to a blinking eye)
# squeeze-bottom: Similar to squeeze, but the animation starts from bottom-most y-position
# zoom: Windows are either created or destroyed from/to their center (not the screen center)

animations = true;
animation-stiffness = 200;
animation-window-mass = 0.7;
animation-dampening = 20;
animation-for-transient-window = "slide-up";
animation-for-unmap-window = "minimize";
animation-for-open-window = "zoom";

animating-rule-open = ["slide-down:class_g = 'dmenu'"];
# animating-rule-unmap = ["zoom:class_g = 'code'"];

#################################
#             Corners           #
#################################
# requires: https://github.com/sdhand/compton
corner-radius = 0.0
rounded-corners-exclude = [
  #"window_type = 'normal'",
  "window_type = 'menu'",
  "window_type = 'popup_menu'",
  "window_type = 'dropdown_menu'",
  "class_g = 'dmenu'",
  "class_g = 'Polybar'",
];
round-borders = 1;
round-borders-exclude = [
  #"class_g = 'TelegramDesktop'",
  # "class_g = 'Polybar'",
];

round-borders-rule = [
  # "3:class_g      = 'XTerm'",
  # "3:class_g      = 'URxvt'",
  # "10:class_g     = 'Alacritty'",
  # "1:class_g     = 'Polybar'"
];

#################################
#             Shadows           #
#################################


shadow = false;
shadow-radius = 7;
# shadow-opacity = .75
shadow-offset-x = -15;
shadow-offset-y = -15;
# shadow-red = 0
# shadow-green = 0
# shadow-blue = 0
# shadow-color = "#000000"
shadow-exclude = [
  "name = 'Notification'",
  "class_g = 'Conky'",
  "class_g ?= 'Notify-osd'",
  "class_g = 'Cairo-clock'",
  "class_g = 'slop'",
  # "class_g = 'Polybar'",
  "_GTK_FRAME_EXTENTS@:c"
];
# shadow-exclude-reg = ""
# xinerama-shadow-crop = false


#################################
#           Fading              #
#################################


fading = true;
fade-in-step = 0.1;
fade-out-step = 0.1;
# fade-delta = 10
fade-exclude = [
  "class_g = 'slop'"   # maim
]
# no-fading-openclose = false
# no-fading-destroyed-argb = false


#################################
#   Transparency / Opacity      #
#################################


inactive-opacity = 0.8;
frame-opacity = 0.7;
inactive-opacity-override = false;
active-opacity = 1.0;
# inactive-dim = 0.0
focus-exclude = [
  "class_g = 'Cairo-clock'",
  "class_g = 'Bar'",                    # lemonbar
  "class_g = 'slop'"                    # maim
];
# inactive-dim-fixed = 1.0
opacity-rule = [
  "80:class_g     = 'Bar'",             # lemonbar
  "100:class_g    = 'slop'",            # maim
  "100:class_g    = 'XTerm'",
  "100:class_g    = 'URxvt'",
  "100:class_g    = 'kitty'",
  "100:class_g    = 'Alacritty'",
  "100:class_g     = 'Polybar'",
  "100:class_g    = 'code-oss'",
  "100:class_g    = 'Meld'",
  "100:class_g     = 'TelegramDesktop'",
  "90:class_g     = 'Joplin'",
  "100:class_g    = 'firefox'",
  "100:class_g    = 'Thunderbird'"
];


#################################
#     Background-Blurring       #
#################################

blur: {
  method = "dual_kawase";
  strength = 10;
  background = false;
  background-frame = false;
  background-fixed = false;
}

blur-background-exclude = [
  "window_type = 'dock'",
  "window_type = 'popup_menu'",
  "window_type = 'menu'",
  "window_type = 'dropdown_menu'",
  "window_type = 'tooltip'",
  "class_g = 'slop'",
  "class_g = 'tuple'",
  "class_g = 'Tuple'",
  "_GTK_FRAME_EXTENTS@:c"
];

#################################
#       General Settings        #
#################################

# daemon = false
backend = "glx";
vsync = true;
# dbus = false
# mark-wmwin-focused = false
mark-wmwin-focused = true;
mark-ovredir-focused = true;
detect-rounded-corners = true;
detect-client-opacity = true;
# use-ewmh-active-win = false
# unredir-if-possible = false
# unredir-if-possible-delay = 0
# unredir-if-possible-exclude = []
detect-transient = true;
detect-client-leader = true;
# resize-damage = 1
# invert-color-include = []
# glx-no-stencil = false
# glx-no-rebind-pixmap = false
# no-use-damage = false
use-damage = true;
# xrender-sync-fence = false

# GLX backend: Use specified GLSL fragment shader for rendering window contents.
# See `compton-default-fshader-win.glsl` and `compton-fake-transparency-fshader-win.glsl`
# in the source tree for examples.
#
# glx-fshader-win = ""

# Force all windows to be painted with blending. Useful if you
# have a glx-fshader-win that could turn opaque pixels transparent.
#
# force-win-blend = false

# Do not use EWMH to detect fullscreen windows.
# Reverts to checking if a window is fullscreen based only on its size and coordinates.
#
# no-ewmh-fullscreen = false

# Dimming bright windows so their brightness doesn't exceed this set value.
# Brightness of a window is estimated by averaging all pixels in the window,
# so this could comes with a performance hit.
# Setting this to 1.0 disables this behaviour. Requires --use-damage to be disabled. (default: 1.0)
#
# max-brightness = 1.0

# Make transparent windows clip other windows like non-transparent windows do,
# instead of blending on top of them.
#
transparent-clipping = false
# Set the log level. Possible values are:
#  "trace", "debug", "info", "warn", "error"
# in increasing level of importance. Case doesn't matter.
# If using the "TRACE" log level, it's better to log into a file
# using *--log-file*, since it can generate a huge stream of logs.
#
# log-level = "debug"
log-level = "info";

# Set the log file.
# If *--log-file* is never specified, logs will be written to stderr.
# Otherwise, logs will to written to the given file, though some of the early
# logs might still be written to the stderr.
# When setting this option from the config file, it is recommended to use an absolute path.
#
# log-file = "/path/to/your/log/file"

# Show all X errors (for debugging)
# show-all-xerrors = false

# Write process ID to a file.
# write-pid-path = "/path/to/your/log/file"

# Window type settings
#
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard:
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility",
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu",
#     "tooltip", "notification", "combo", and "dnd".
#
# Following per window-type options are available: ::
#
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
#
#   opacity:::
#     Controls default opacity of the window type.
#
#   focus:::
#     Controls whether the window of this type is to be always considered focused.
#     (By default, all window types except "normal" and "dialog" has this on.)
#
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you
#     normally won't be able to see. Useful when the window has parts of it
#     transparent, and you want shadows in those areas.
#
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection,
#     you can set this to `true`.
#
wintypes:
{
  normal: 
  {  fade = false; shadow = false; };
  tooltip:
  { corner-radius = 0; fade = true; opacity = 0.75; focus = true; animation = "zoom"; };
  notification:
  { corner-radius = 0; };
  dock:
  { corner-radius = 0; shadow = false; blur = false; };
  dnd:
  { corner-radius = 0; shadow = false; blur = false; };
  popup_menu:
  { corner-radius = 0; opacity = 0.8; animation = "zoom"; };
  dropdown_menu:
  { corner-radius = 0; opacity = 0.8; animation = "zoom"; };
  menu: 
  { corner-radius = 0; animation = "zoom"; opacity = 0.8; };
};
